---
description: Plugin README Guide
globs: 
---
# 📝 Plugin README Guide

## 📝 Title & Brief Description

- The title should be in the format: `# 🎧 Plugin <PLUGIN_NAME>`.
- Provide a **one-sentence** summary describing the plugin’s purpose and functionality.
- Mention the key **platform, service, or technology** the plugin interacts with.

---

## 📌 Overview

- Clearly define what the plugin does.
- List out the **core functionalities** as bullet points.
- Use ✅ emoji markers to highlight key features.
- If applicable, mention the **base currency or dependencies** used.

---

## 🛠 Installation

- Provide **step-by-step instructions** for installation.
- Specify the **package manager or method** for installation.
- Use **bash code blocks** for terminal commands.

### Example

Install the plugin using **pnpm**:

```bash
pnpm add @iqai/package
```

after installation, you can use the plugin like this:

```typescript
import { createPlugin } from "@iqai/package";
const pluginOpts = {}
const plugin = await createPlugin(pluginOpts);

 const agent = new AgentBuilder()
  ...
  .withPlugin(plugin)
```

---

## ⚙ Configuration

- Detail the **environment variables** required for the plugin to function.
- Use a **table format** with:
  - 🔧 **Variable Name**
  - 🌜 **Description**
- Include at least **one required variable** (e.g., API key, private key).

### Example

| 🔧 Variable Name      | 🌜 Description                                 |
|----------------------|----------------------------------------------|
| `API_KEY`           | Your API key for authentication 🔑           |
| `WALLET_PRIVATE_KEY` | Wallet private key for transactions 🛡       |

---

## 🚀 Usage

- Demonstrate how to **import and initialize** the plugin.
- Provide **TypeScript/JavaScript example code** inside a code block.

### Example

```typescript
import { createPlugin } from "@plugin-name/package";

// Initialize the plugin
const plugin = await createPlugin({
  apiKey: process.env.API_KEY,
});
```

---

## 🎯 Actions

- List **each action separately** using a structured format.
- Use **emoji markers** to distinguish different actions.
- Include:
  - **Action name (in uppercase)** e.g., `ACTION_NAME`
  - A **brief description** of what the action does.
  - A 💬 **Examples** section with possible user queries.

### Example

### 📊 `PLUGIN_GET_STATS`

Fetch **statistics** for a specific entity.

💬 **Examples:**

- "Show me stats for entity `0x1234...5678`"
- "Details for entity `0x1234...5678`"

---

## 🌜 Response Format

- Describe the **structure of the API response**.
- Include key elements such as:
  - ✔ **Transaction status**
  - 🔗 **Transaction hash**
  - 💲 **Formatted token values**
  - ⚠ **Error messages**
  - 🏷 **Entity information**

---

## ❌ Error Handling

- List the common **error scenarios** handled by the plugin.
- Use **emoji markers** for readability.
- Cover cases like:
  - 🚨 **Invalid requests**
  - 💸 **Insufficient balances**
  - 🔄 **Transaction failures**
  - 🌐 **Network errors**
  - 🚫 **Validation failures**

---

## 🛠 How to Use This Template

When generating a new README, replace `<PLUGIN_NAME>` with the actual name of the plugin. Ensure that each section is **structured, informative, and concise**.

This template ensures **consistency** across all plugin documentation while making it **easy to understand and navigate**.
